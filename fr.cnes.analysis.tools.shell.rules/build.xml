<project name="Rules" default="generate-all" basedir=".">

	<property name="jflex-jar" value="../fr.cnes.analysis.tools.shell.jflex/lib/jflex-1.4.3/lib/JFlex.jar">
	</property>
	<property name="dest" value="src-gen/fr/cnes/analysis/tools/shell/rules">
	</property>

	<target name="clean">
		<delete dir="src-gen/fr"/>
	</target>

	<target name="generate-all">
		<antcall target="generate-COMDATAInitialisation"></antcall>
		<antcall target="generate-COMDATAInvariant"></antcall>
		<antcall target="generate-COMDATALoopCondition"></antcall>
		<antcall target="generate-COMDATANotUsed"></antcall>
		<antcall target="generate-COMDESIGNActiveWait"></antcall>
		<antcall target="generate-COMFLOWAbort"></antcall>
		<antcall target="generate-COMFLOWBooleanExpression"></antcall>
		<antcall target="generate-COMFLOWCaseSwitch"></antcall>
		<antcall target="generate-COMFLOWExit"></antcall>
		<antcall target="generate-COMFLOWExitLoop"></antcall>
		<antcall target="generate-COMFLOWFileExistence"></antcall>
		<antcall target="generate-COMFLOWFilePath"></antcall>
		<antcall target="generate-COMFLOWRecursion"></antcall>
		<antcall target="generate-COMINSTBoolNegation"></antcall>
		<antcall target="generate-COMINSTBrace"></antcall>
		<antcall target="generate-COMINSTCodeComment"></antcall>
		<antcall target="generate-COMINSTLine"></antcall>
		<antcall target="generate-COMINSTLoopCondition"></antcall>
		<antcall target="generate-COMNAMEHomonymy"></antcall>
		<antcall target="generate-COMPRESHeader"></antcall>
		<antcall target="generate-COMPRESLengthLine"></antcall>
		<antcall target="generate-COMPRESIndent"></antcall>
		<antcall target="generate-COMTYPEExpression"></antcall>
		<antcall target="generate-SHDATAIFS"></antcall>
		<antcall target="generate-SHDATAInteger"></antcall>
		<antcall target="generate-SHDESIGNBash"></antcall>
		<antcall target="generate-SHDESIGNOptions"></antcall>
		<antcall target="generate-SHERRHelp"></antcall>
		<antcall target="generate-SHERRNoPipe"></antcall>
		<antcall target="generate-SHERRString"></antcall>
		<antcall target="generate-SHFLOWCheckArguments"></antcall>
		<antcall target="generate-SHFLOWCheckCodeReturn"></antcall>
		<antcall target="generate-SHFLOWCheckUser"></antcall>
		<antcall target="generate-SHINSTBasename"></antcall>
		<antcall target="generate-SHINSTContinue"></antcall>
		<antcall target="generate-SHINSTFind"></antcall>
		<antcall target="generate-SHINSTGetOpts"></antcall>
		<antcall target="generate-SHINSTInterpreter"></antcall>
		<antcall target="generate-SHINSTKeywords"></antcall>
		<antcall target="generate-SHINSTLogical"></antcall>
		<antcall target="generate-SHINSTPOSIX"></antcall>
		<antcall target="generate-SHINSTSetShift"></antcall>
		<antcall target="generate-SHINSTVariables"></antcall>
		<antcall target="generate-SHIORedirect"></antcall>
		<antcall target="generate-SHMETLimitAWK"></antcall>
		<antcall target="generate-SHMETLimitSed"></antcall>
		<antcall target="generate-SHMETPipeLine"></antcall>
		<antcall target="generate-SHREFExport"></antcall>
		<antcall target="generate-SHSYNCSignals"></antcall>
		
	</target>

	<target name="generate-COMDATAInitialisation">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/COMDATAInitialisation.lex" />
		</java>
		<move file="lex/COMDATAInitialisation.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-COMDATAInvariant">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/COMDATAInvariant.lex" />
		</java>
		<move file="lex/COMDATAInvariant.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-COMDATALoopCondition">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/COMDATALoopCondition.lex" />
		</java>
		<move file="lex/COMDATALoopCondition.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-COMDATANotUsed">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/COMDATANotUsed.lex" />
		</java>
		<move file="lex/COMDATANotUsed.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-COMFLOWAbort">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/COMFLOWAbort.lex" />
		</java>
		<move file="lex/COMFLOWAbort.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-COMDESIGNActiveWait">
        <java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
            <arg value="lex/COMDESIGNActiveWait.lex" />
        </java>
        <move file="lex/COMDESIGNActiveWait.java" todir="${dest}">
        </move>
    </target>
	<target name="generate-COMFLOWBooleanExpression">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/COMFLOWBooleanExpression.lex" />
		</java>
		<move file="lex/COMFLOWBooleanExpression.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-COMFLOWCaseSwitch">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/COMFLOWCaseSwitch.lex" />
		</java>
		<move file="lex/COMFLOWCaseSwitch.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-COMFLOWExit">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/COMFLOWExit.lex" />
		</java>
		<move file="lex/COMFLOWExit.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-COMFLOWExitLoop">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/COMFLOWExitLoop.lex" />
		</java>
		<move file="lex/COMFLOWExitLoop.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-COMFLOWFileExistence">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/COMFLOWFileExistence.lex" />
		</java>
		<move file="lex/COMFLOWFileExistence.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-COMFLOWFilePath">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/COMFLOWFilePath.lex" />
		</java>
		<move file="lex/COMFLOWFilePath.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-COMFLOWRecursion">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/COMFLOWRecursion.lex" />
		</java>
		<move file="lex/COMFLOWRecursion.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-COMINSTBoolNegation">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/COMINSTBoolNegation.lex" />
		</java>
		<move file="lex/COMINSTBoolNegation.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-COMINSTBrace">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/COMINSTBrace.lex" />
		</java>
		<move file="lex/COMINSTBrace.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-COMINSTCodeComment">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/COMINSTCodeComment.lex" />
		</java>
		<move file="lex/COMINSTCodeComment.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-COMINSTLine">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/COMINSTLine.lex" />
		</java>
		<move file="lex/COMINSTLine.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-COMINSTLoopCondition">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/COMINSTLoopCondition.lex" />
		</java>
		<move file="lex/COMINSTLoopCondition.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-COMNAMEHomonymy">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/COMNAMEHomonymy.lex" />
		</java>
		<move file="lex/COMNAMEHomonymy.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-COMPRESHeader">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/COMPRESHeader.lex" />
		</java>
		<move file="lex/COMPRESHeader.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-COMPRESLengthLine">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/COMPRESLengthLine.lex" />
		</java>
		<move file="lex/COMPRESLengthLine.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-COMPRESIndent">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/COMPRESIndent.lex" />
		</java>
		<move file="lex/COMPRESIndent.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-COMTYPEExpression">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/COMTYPEExpression.lex" />
		</java>
		<move file="lex/COMTYPEExpression.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-SHDATAIFS">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/SHDATAIFS.lex" />
		</java>
		<move file="lex/SHDATAIFS.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-SHDATAInteger">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/SHDATAInteger.lex" />
		</java>
		<move file="lex/SHDATAInteger.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-SHDESIGNBash">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/SHDESIGNBash.lex" />
		</java>
		<move file="lex/SHDESIGNBash.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-SHDESIGNOptions">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/SHDESIGNOptions.lex" />
		</java>
		<move file="lex/SHDESIGNOptions.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-SHERRHelp">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/SHERRHelp.lex" />
		</java>
		<move file="lex/SHERRHelp.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-SHERRNoPipe">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/SHERRNoPipe.lex" />
		</java>
		<move file="lex/SHERRNoPipe.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-SHERRString">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/SHERRString.lex" />
		</java>
		<move file="lex/SHERRString.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-SHFLOWCheckArguments">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/SHFLOWCheckArguments.lex" />
		</java>
		<move file="lex/SHFLOWCheckArguments.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-SHFLOWCheckCodeReturn">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/SHFLOWCheckCodeReturn.lex" />
		</java>
		<move file="lex/SHFLOWCheckCodeReturn.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-SHFLOWCheckUser">
			<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
				<arg value="lex/SHFLOWCheckUser.lex" />
			</java>
			<move file="lex/SHFLOWCheckUser.java" todir="${dest}">
			</move>
		</target>
	<target name="generate-SHINSTBasename">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/SHINSTBasename.lex" />
		</java>
		<move file="lex/SHINSTBasename.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-SHINSTContinue">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/SHINSTContinue.lex" />
		</java>
		<move file="lex/SHINSTContinue.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-SHINSTFind">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/SHINSTFind.lex" />
		</java>
		<move file="lex/SHINSTFind.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-SHINSTGetOpts">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/SHINSTGetOpts.lex" />
		</java>
		<move file="lex/SHINSTGetOpts.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-SHINSTInterpreter">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/SHINSTInterpreter.lex" />
		</java>
		<move file="lex/SHINSTInterpreter.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-SHINSTKeywords">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/SHINSTKeywords.lex" />
		</java>
		<move file="lex/SHINSTKeywords.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-SHINSTLogical">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/SHINSTLogical.lex" />
		</java>
		<move file="lex/SHINSTLogical.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-SHINSTPOSIX">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/SHINSTPOSIX.lex" />
		</java>
		<move file="lex/SHINSTPOSIX.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-SHINSTSetShift">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/SHINSTSetShift.lex" />
		</java>
		<move file="lex/SHINSTSetShift.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-SHINSTVariables">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/SHINSTVariables.lex" />
		</java>
		<move file="lex/SHINSTVariables.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-SHIORedirect">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/SHIORedirect.lex" />
		</java>
		<move file="lex/SHIORedirect.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-SHMETLimitAWK">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/SHMETLimitAWK.lex" />
		</java>
		<move file="lex/SHMETLimitAWK.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-SHMETLimitSed">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/SHMETLimitSed.lex" />
		</java>
		<move file="lex/SHMETLimitSed.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-SHMETPipeLine">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/SHMETPipeLine.lex" />
		</java>
		<move file="lex/SHMETPipeLine.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-SHREFExport">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/SHREFExport.lex" />
		</java>
		<move file="lex/SHREFExport.java" todir="${dest}">
		</move>
	</target>
	<target name="generate-SHSYNCSignals">
		<java jar="${jflex-jar}" fork="true" failonerror="true" maxmemory="128m">
			<arg value="lex/SHSYNCSignals.lex" />
		</java>
		<move file="lex/SHSYNCSignals.java" todir="${dest}">
		</move>
	</target>
</project>